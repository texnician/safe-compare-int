#ifdef _MSC_VER
#include <assert.h>
#define ASSERT_TRUE(exp) assert((exp) == true)
#define ASSERT_FALSE(exp) assert((exp) == false)
#endif
#include "intcmp.h"
void RunTest()
{
// char vs unsigned char
ASSERT_FALSE(IntEq((char)-128, (unsigned char)200));
ASSERT_TRUE(IntNe((char)-128, (unsigned char)200));
ASSERT_TRUE(IntLt((char)-128, (unsigned char)200));
ASSERT_TRUE(IntLe((char)-128, (unsigned char)200));
ASSERT_FALSE(IntGt((char)-128, (unsigned char)200));
ASSERT_FALSE(IntGe((char)-128, (unsigned char)200));
ASSERT_FALSE(IntEq((char)-64, (unsigned char)40));
ASSERT_TRUE(IntNe((char)-64, (unsigned char)40));
ASSERT_TRUE(IntLt((char)-64, (unsigned char)40));
ASSERT_TRUE(IntLe((char)-64, (unsigned char)40));
ASSERT_FALSE(IntGt((char)-64, (unsigned char)40));
ASSERT_FALSE(IntGe((char)-64, (unsigned char)40));
ASSERT_TRUE(IntEq((char)0, (unsigned char)0));
ASSERT_FALSE(IntNe((char)0, (unsigned char)0));
ASSERT_FALSE(IntLt((char)0, (unsigned char)0));
ASSERT_TRUE(IntLe((char)0, (unsigned char)0));
ASSERT_FALSE(IntGt((char)0, (unsigned char)0));
ASSERT_TRUE(IntGe((char)0, (unsigned char)0));
ASSERT_FALSE(IntEq((char)0, (unsigned char)57));
ASSERT_TRUE(IntNe((char)0, (unsigned char)57));
ASSERT_TRUE(IntLt((char)0, (unsigned char)57));
ASSERT_TRUE(IntLe((char)0, (unsigned char)57));
ASSERT_FALSE(IntGt((char)0, (unsigned char)57));
ASSERT_FALSE(IntGe((char)0, (unsigned char)57));
ASSERT_TRUE(IntEq((char)67, (unsigned char)67));
ASSERT_FALSE(IntNe((char)67, (unsigned char)67));
ASSERT_FALSE(IntLt((char)67, (unsigned char)67));
ASSERT_TRUE(IntLe((char)67, (unsigned char)67));
ASSERT_FALSE(IntGt((char)67, (unsigned char)67));
ASSERT_TRUE(IntGe((char)67, (unsigned char)67));
ASSERT_FALSE(IntEq((char)67, (unsigned char)60));
ASSERT_TRUE(IntNe((char)67, (unsigned char)60));
ASSERT_FALSE(IntLt((char)67, (unsigned char)60));
ASSERT_FALSE(IntLe((char)67, (unsigned char)60));
ASSERT_TRUE(IntGt((char)67, (unsigned char)60));
ASSERT_TRUE(IntGe((char)67, (unsigned char)60));
ASSERT_FALSE(IntEq((char)67, (unsigned char)100));
ASSERT_TRUE(IntNe((char)67, (unsigned char)100));
ASSERT_TRUE(IntLt((char)67, (unsigned char)100));
ASSERT_TRUE(IntLe((char)67, (unsigned char)100));
ASSERT_FALSE(IntGt((char)67, (unsigned char)100));
ASSERT_FALSE(IntGe((char)67, (unsigned char)100));
ASSERT_TRUE(IntEq((char)127, (unsigned char)127));
ASSERT_FALSE(IntNe((char)127, (unsigned char)127));
ASSERT_FALSE(IntLt((char)127, (unsigned char)127));
ASSERT_TRUE(IntLe((char)127, (unsigned char)127));
ASSERT_FALSE(IntGt((char)127, (unsigned char)127));
ASSERT_TRUE(IntGe((char)127, (unsigned char)127));
ASSERT_FALSE(IntEq((char)127, (unsigned char)109));
ASSERT_TRUE(IntNe((char)127, (unsigned char)109));
ASSERT_FALSE(IntLt((char)127, (unsigned char)109));
ASSERT_FALSE(IntLe((char)127, (unsigned char)109));
ASSERT_TRUE(IntGt((char)127, (unsigned char)109));
ASSERT_TRUE(IntGe((char)127, (unsigned char)109));
ASSERT_FALSE(IntEq((char)127, (unsigned char)178));
ASSERT_TRUE(IntNe((char)127, (unsigned char)178));
ASSERT_TRUE(IntLt((char)127, (unsigned char)178));
ASSERT_TRUE(IntLe((char)127, (unsigned char)178));
ASSERT_FALSE(IntGt((char)127, (unsigned char)178));
ASSERT_FALSE(IntGe((char)127, (unsigned char)178));
// char vs short
ASSERT_TRUE(IntEq((char)-128, (short)-128));
ASSERT_FALSE(IntNe((char)-128, (short)-128));
ASSERT_FALSE(IntLt((char)-128, (short)-128));
ASSERT_TRUE(IntLe((char)-128, (short)-128));
ASSERT_FALSE(IntGt((char)-128, (short)-128));
ASSERT_TRUE(IntGe((char)-128, (short)-128));
ASSERT_FALSE(IntEq((char)-128, (short)-21133));
ASSERT_TRUE(IntNe((char)-128, (short)-21133));
ASSERT_FALSE(IntLt((char)-128, (short)-21133));
ASSERT_FALSE(IntLe((char)-128, (short)-21133));
ASSERT_TRUE(IntGt((char)-128, (short)-21133));
ASSERT_TRUE(IntGe((char)-128, (short)-21133));
ASSERT_FALSE(IntEq((char)-128, (short)22727));
ASSERT_TRUE(IntNe((char)-128, (short)22727));
ASSERT_TRUE(IntLt((char)-128, (short)22727));
ASSERT_TRUE(IntLe((char)-128, (short)22727));
ASSERT_FALSE(IntGt((char)-128, (short)22727));
ASSERT_FALSE(IntGe((char)-128, (short)22727));
ASSERT_TRUE(IntEq((char)-42, (short)-42));
ASSERT_FALSE(IntNe((char)-42, (short)-42));
ASSERT_FALSE(IntLt((char)-42, (short)-42));
ASSERT_TRUE(IntLe((char)-42, (short)-42));
ASSERT_FALSE(IntGt((char)-42, (short)-42));
ASSERT_TRUE(IntGe((char)-42, (short)-42));
ASSERT_FALSE(IntEq((char)-42, (short)-29553));
ASSERT_TRUE(IntNe((char)-42, (short)-29553));
ASSERT_FALSE(IntLt((char)-42, (short)-29553));
ASSERT_FALSE(IntLe((char)-42, (short)-29553));
ASSERT_TRUE(IntGt((char)-42, (short)-29553));
ASSERT_TRUE(IntGe((char)-42, (short)-29553));
ASSERT_FALSE(IntEq((char)-42, (short)2062));
ASSERT_TRUE(IntNe((char)-42, (short)2062));
ASSERT_TRUE(IntLt((char)-42, (short)2062));
ASSERT_TRUE(IntLe((char)-42, (short)2062));
ASSERT_FALSE(IntGt((char)-42, (short)2062));
ASSERT_FALSE(IntGe((char)-42, (short)2062));
ASSERT_TRUE(IntEq((char)0, (short)0));
ASSERT_FALSE(IntNe((char)0, (short)0));
ASSERT_FALSE(IntLt((char)0, (short)0));
ASSERT_TRUE(IntLe((char)0, (short)0));
ASSERT_FALSE(IntGt((char)0, (short)0));
ASSERT_TRUE(IntGe((char)0, (short)0));
ASSERT_FALSE(IntEq((char)0, (short)-29081));
ASSERT_TRUE(IntNe((char)0, (short)-29081));
ASSERT_FALSE(IntLt((char)0, (short)-29081));
ASSERT_FALSE(IntLe((char)0, (short)-29081));
ASSERT_TRUE(IntGt((char)0, (short)-29081));
ASSERT_TRUE(IntGe((char)0, (short)-29081));
ASSERT_FALSE(IntEq((char)0, (short)7776));
ASSERT_TRUE(IntNe((char)0, (short)7776));
ASSERT_TRUE(IntLt((char)0, (short)7776));
ASSERT_TRUE(IntLe((char)0, (short)7776));
ASSERT_FALSE(IntGt((char)0, (short)7776));
ASSERT_FALSE(IntGe((char)0, (short)7776));
ASSERT_TRUE(IntEq((char)75, (short)75));
ASSERT_FALSE(IntNe((char)75, (short)75));
ASSERT_FALSE(IntLt((char)75, (short)75));
ASSERT_TRUE(IntLe((char)75, (short)75));
ASSERT_FALSE(IntGt((char)75, (short)75));
ASSERT_TRUE(IntGe((char)75, (short)75));
ASSERT_FALSE(IntEq((char)75, (short)-21457));
ASSERT_TRUE(IntNe((char)75, (short)-21457));
ASSERT_FALSE(IntLt((char)75, (short)-21457));
ASSERT_FALSE(IntLe((char)75, (short)-21457));
ASSERT_TRUE(IntGt((char)75, (short)-21457));
ASSERT_TRUE(IntGe((char)75, (short)-21457));
ASSERT_FALSE(IntEq((char)75, (short)19710));
ASSERT_TRUE(IntNe((char)75, (short)19710));
ASSERT_TRUE(IntLt((char)75, (short)19710));
ASSERT_TRUE(IntLe((char)75, (short)19710));
ASSERT_FALSE(IntGt((char)75, (short)19710));
ASSERT_FALSE(IntGe((char)75, (short)19710));
ASSERT_TRUE(IntEq((char)127, (short)127));
ASSERT_FALSE(IntNe((char)127, (short)127));
ASSERT_FALSE(IntLt((char)127, (short)127));
ASSERT_TRUE(IntLe((char)127, (short)127));
ASSERT_FALSE(IntGt((char)127, (short)127));
ASSERT_TRUE(IntGe((char)127, (short)127));
ASSERT_FALSE(IntEq((char)127, (short)-3098));
ASSERT_TRUE(IntNe((char)127, (short)-3098));
ASSERT_FALSE(IntLt((char)127, (short)-3098));
ASSERT_FALSE(IntLe((char)127, (short)-3098));
ASSERT_TRUE(IntGt((char)127, (short)-3098));
ASSERT_TRUE(IntGe((char)127, (short)-3098));
ASSERT_FALSE(IntEq((char)127, (short)14717));
ASSERT_TRUE(IntNe((char)127, (short)14717));
ASSERT_TRUE(IntLt((char)127, (short)14717));
ASSERT_TRUE(IntLe((char)127, (short)14717));
ASSERT_FALSE(IntGt((char)127, (short)14717));
ASSERT_FALSE(IntGe((char)127, (short)14717));
// char vs unsigned short
ASSERT_FALSE(IntEq((char)-128, (unsigned short)31036));
ASSERT_TRUE(IntNe((char)-128, (unsigned short)31036));
ASSERT_TRUE(IntLt((char)-128, (unsigned short)31036));
ASSERT_TRUE(IntLe((char)-128, (unsigned short)31036));
ASSERT_FALSE(IntGt((char)-128, (unsigned short)31036));
ASSERT_FALSE(IntGe((char)-128, (unsigned short)31036));
ASSERT_FALSE(IntEq((char)-120, (unsigned short)6993));
ASSERT_TRUE(IntNe((char)-120, (unsigned short)6993));
ASSERT_TRUE(IntLt((char)-120, (unsigned short)6993));
ASSERT_TRUE(IntLe((char)-120, (unsigned short)6993));
ASSERT_FALSE(IntGt((char)-120, (unsigned short)6993));
ASSERT_FALSE(IntGe((char)-120, (unsigned short)6993));
ASSERT_TRUE(IntEq((char)0, (unsigned short)0));
ASSERT_FALSE(IntNe((char)0, (unsigned short)0));
ASSERT_FALSE(IntLt((char)0, (unsigned short)0));
ASSERT_TRUE(IntLe((char)0, (unsigned short)0));
ASSERT_FALSE(IntGt((char)0, (unsigned short)0));
ASSERT_TRUE(IntGe((char)0, (unsigned short)0));
ASSERT_FALSE(IntEq((char)0, (unsigned short)30289));
ASSERT_TRUE(IntNe((char)0, (unsigned short)30289));
ASSERT_TRUE(IntLt((char)0, (unsigned short)30289));
ASSERT_TRUE(IntLe((char)0, (unsigned short)30289));
ASSERT_FALSE(IntGt((char)0, (unsigned short)30289));
ASSERT_FALSE(IntGe((char)0, (unsigned short)30289));
ASSERT_TRUE(IntEq((char)75, (unsigned short)75));
ASSERT_FALSE(IntNe((char)75, (unsigned short)75));
ASSERT_FALSE(IntLt((char)75, (unsigned short)75));
ASSERT_TRUE(IntLe((char)75, (unsigned short)75));
ASSERT_FALSE(IntGt((char)75, (unsigned short)75));
ASSERT_TRUE(IntGe((char)75, (unsigned short)75));
ASSERT_FALSE(IntEq((char)75, (unsigned short)10));
ASSERT_TRUE(IntNe((char)75, (unsigned short)10));
ASSERT_FALSE(IntLt((char)75, (unsigned short)10));
ASSERT_FALSE(IntLe((char)75, (unsigned short)10));
ASSERT_TRUE(IntGt((char)75, (unsigned short)10));
ASSERT_TRUE(IntGe((char)75, (unsigned short)10));
ASSERT_FALSE(IntEq((char)75, (unsigned short)28615));
ASSERT_TRUE(IntNe((char)75, (unsigned short)28615));
ASSERT_TRUE(IntLt((char)75, (unsigned short)28615));
ASSERT_TRUE(IntLe((char)75, (unsigned short)28615));
ASSERT_FALSE(IntGt((char)75, (unsigned short)28615));
ASSERT_FALSE(IntGe((char)75, (unsigned short)28615));
ASSERT_TRUE(IntEq((char)127, (unsigned short)127));
ASSERT_FALSE(IntNe((char)127, (unsigned short)127));
ASSERT_FALSE(IntLt((char)127, (unsigned short)127));
ASSERT_TRUE(IntLe((char)127, (unsigned short)127));
ASSERT_FALSE(IntGt((char)127, (unsigned short)127));
ASSERT_TRUE(IntGe((char)127, (unsigned short)127));
ASSERT_FALSE(IntEq((char)127, (unsigned short)78));
ASSERT_TRUE(IntNe((char)127, (unsigned short)78));
ASSERT_FALSE(IntLt((char)127, (unsigned short)78));
ASSERT_FALSE(IntLe((char)127, (unsigned short)78));
ASSERT_TRUE(IntGt((char)127, (unsigned short)78));
ASSERT_TRUE(IntGe((char)127, (unsigned short)78));
ASSERT_FALSE(IntEq((char)127, (unsigned short)8434));
ASSERT_TRUE(IntNe((char)127, (unsigned short)8434));
ASSERT_TRUE(IntLt((char)127, (unsigned short)8434));
ASSERT_TRUE(IntLe((char)127, (unsigned short)8434));
ASSERT_FALSE(IntGt((char)127, (unsigned short)8434));
ASSERT_FALSE(IntGe((char)127, (unsigned short)8434));
// unsigned char vs char
ASSERT_TRUE(IntEq((unsigned char)0, (char)0));
ASSERT_FALSE(IntNe((unsigned char)0, (char)0));
ASSERT_FALSE(IntLt((unsigned char)0, (char)0));
ASSERT_TRUE(IntLe((unsigned char)0, (char)0));
ASSERT_FALSE(IntGt((unsigned char)0, (char)0));
ASSERT_TRUE(IntGe((unsigned char)0, (char)0));
ASSERT_FALSE(IntEq((unsigned char)0, (char)-46));
ASSERT_TRUE(IntNe((unsigned char)0, (char)-46));
ASSERT_FALSE(IntLt((unsigned char)0, (char)-46));
ASSERT_FALSE(IntLe((unsigned char)0, (char)-46));
ASSERT_TRUE(IntGt((unsigned char)0, (char)-46));
ASSERT_TRUE(IntGe((unsigned char)0, (char)-46));
ASSERT_FALSE(IntEq((unsigned char)0, (char)127));
ASSERT_TRUE(IntNe((unsigned char)0, (char)127));
ASSERT_TRUE(IntLt((unsigned char)0, (char)127));
ASSERT_TRUE(IntLe((unsigned char)0, (char)127));
ASSERT_FALSE(IntGt((unsigned char)0, (char)127));
ASSERT_FALSE(IntGe((unsigned char)0, (char)127));
ASSERT_FALSE(IntEq((unsigned char)169, (char)32));
ASSERT_TRUE(IntNe((unsigned char)169, (char)32));
ASSERT_FALSE(IntLt((unsigned char)169, (char)32));
ASSERT_FALSE(IntLe((unsigned char)169, (char)32));
ASSERT_TRUE(IntGt((unsigned char)169, (char)32));
ASSERT_TRUE(IntGe((unsigned char)169, (char)32));
ASSERT_FALSE(IntEq((unsigned char)255, (char)22));
ASSERT_TRUE(IntNe((unsigned char)255, (char)22));
ASSERT_FALSE(IntLt((unsigned char)255, (char)22));
ASSERT_FALSE(IntLe((unsigned char)255, (char)22));
ASSERT_TRUE(IntGt((unsigned char)255, (char)22));
ASSERT_TRUE(IntGe((unsigned char)255, (char)22));
// unsigned char vs short
ASSERT_TRUE(IntEq((unsigned char)0, (short)0));
ASSERT_FALSE(IntNe((unsigned char)0, (short)0));
ASSERT_FALSE(IntLt((unsigned char)0, (short)0));
ASSERT_TRUE(IntLe((unsigned char)0, (short)0));
ASSERT_FALSE(IntGt((unsigned char)0, (short)0));
ASSERT_TRUE(IntGe((unsigned char)0, (short)0));
ASSERT_FALSE(IntEq((unsigned char)0, (short)-22716));
ASSERT_TRUE(IntNe((unsigned char)0, (short)-22716));
ASSERT_FALSE(IntLt((unsigned char)0, (short)-22716));
ASSERT_FALSE(IntLe((unsigned char)0, (short)-22716));
ASSERT_TRUE(IntGt((unsigned char)0, (short)-22716));
ASSERT_TRUE(IntGe((unsigned char)0, (short)-22716));
ASSERT_FALSE(IntEq((unsigned char)0, (short)3796));
ASSERT_TRUE(IntNe((unsigned char)0, (short)3796));
ASSERT_TRUE(IntLt((unsigned char)0, (short)3796));
ASSERT_TRUE(IntLe((unsigned char)0, (short)3796));
ASSERT_FALSE(IntGt((unsigned char)0, (short)3796));
ASSERT_FALSE(IntGe((unsigned char)0, (short)3796));
ASSERT_TRUE(IntEq((unsigned char)247, (short)247));
ASSERT_FALSE(IntNe((unsigned char)247, (short)247));
ASSERT_FALSE(IntLt((unsigned char)247, (short)247));
ASSERT_TRUE(IntLe((unsigned char)247, (short)247));
ASSERT_FALSE(IntGt((unsigned char)247, (short)247));
ASSERT_TRUE(IntGe((unsigned char)247, (short)247));
ASSERT_FALSE(IntEq((unsigned char)247, (short)-32754));
ASSERT_TRUE(IntNe((unsigned char)247, (short)-32754));
ASSERT_FALSE(IntLt((unsigned char)247, (short)-32754));
ASSERT_FALSE(IntLe((unsigned char)247, (short)-32754));
ASSERT_TRUE(IntGt((unsigned char)247, (short)-32754));
ASSERT_TRUE(IntGe((unsigned char)247, (short)-32754));
ASSERT_FALSE(IntEq((unsigned char)247, (short)1030));
ASSERT_TRUE(IntNe((unsigned char)247, (short)1030));
ASSERT_TRUE(IntLt((unsigned char)247, (short)1030));
ASSERT_TRUE(IntLe((unsigned char)247, (short)1030));
ASSERT_FALSE(IntGt((unsigned char)247, (short)1030));
ASSERT_FALSE(IntGe((unsigned char)247, (short)1030));
ASSERT_TRUE(IntEq((unsigned char)255, (short)255));
ASSERT_FALSE(IntNe((unsigned char)255, (short)255));
ASSERT_FALSE(IntLt((unsigned char)255, (short)255));
ASSERT_TRUE(IntLe((unsigned char)255, (short)255));
ASSERT_FALSE(IntGt((unsigned char)255, (short)255));
ASSERT_TRUE(IntGe((unsigned char)255, (short)255));
ASSERT_FALSE(IntEq((unsigned char)255, (short)-29428));
ASSERT_TRUE(IntNe((unsigned char)255, (short)-29428));
ASSERT_FALSE(IntLt((unsigned char)255, (short)-29428));
ASSERT_FALSE(IntLe((unsigned char)255, (short)-29428));
ASSERT_TRUE(IntGt((unsigned char)255, (short)-29428));
ASSERT_TRUE(IntGe((unsigned char)255, (short)-29428));
ASSERT_FALSE(IntEq((unsigned char)255, (short)16496));
ASSERT_TRUE(IntNe((unsigned char)255, (short)16496));
ASSERT_TRUE(IntLt((unsigned char)255, (short)16496));
ASSERT_TRUE(IntLe((unsigned char)255, (short)16496));
ASSERT_FALSE(IntGt((unsigned char)255, (short)16496));
ASSERT_FALSE(IntGe((unsigned char)255, (short)16496));
// unsigned char vs unsigned short
ASSERT_TRUE(IntEq((unsigned char)0, (unsigned short)0));
ASSERT_FALSE(IntNe((unsigned char)0, (unsigned short)0));
ASSERT_FALSE(IntLt((unsigned char)0, (unsigned short)0));
ASSERT_TRUE(IntLe((unsigned char)0, (unsigned short)0));
ASSERT_FALSE(IntGt((unsigned char)0, (unsigned short)0));
ASSERT_TRUE(IntGe((unsigned char)0, (unsigned short)0));
ASSERT_FALSE(IntEq((unsigned char)0, (unsigned short)12050));
ASSERT_TRUE(IntNe((unsigned char)0, (unsigned short)12050));
ASSERT_TRUE(IntLt((unsigned char)0, (unsigned short)12050));
ASSERT_TRUE(IntLe((unsigned char)0, (unsigned short)12050));
ASSERT_FALSE(IntGt((unsigned char)0, (unsigned short)12050));
ASSERT_FALSE(IntGe((unsigned char)0, (unsigned short)12050));
ASSERT_TRUE(IntEq((unsigned char)213, (unsigned short)213));
ASSERT_FALSE(IntNe((unsigned char)213, (unsigned short)213));
ASSERT_FALSE(IntLt((unsigned char)213, (unsigned short)213));
ASSERT_TRUE(IntLe((unsigned char)213, (unsigned short)213));
ASSERT_FALSE(IntGt((unsigned char)213, (unsigned short)213));
ASSERT_TRUE(IntGe((unsigned char)213, (unsigned short)213));
ASSERT_FALSE(IntEq((unsigned char)213, (unsigned short)94));
ASSERT_TRUE(IntNe((unsigned char)213, (unsigned short)94));
ASSERT_FALSE(IntLt((unsigned char)213, (unsigned short)94));
ASSERT_FALSE(IntLe((unsigned char)213, (unsigned short)94));
ASSERT_TRUE(IntGt((unsigned char)213, (unsigned short)94));
ASSERT_TRUE(IntGe((unsigned char)213, (unsigned short)94));
ASSERT_FALSE(IntEq((unsigned char)213, (unsigned short)65005));
ASSERT_TRUE(IntNe((unsigned char)213, (unsigned short)65005));
ASSERT_TRUE(IntLt((unsigned char)213, (unsigned short)65005));
ASSERT_TRUE(IntLe((unsigned char)213, (unsigned short)65005));
ASSERT_FALSE(IntGt((unsigned char)213, (unsigned short)65005));
ASSERT_FALSE(IntGe((unsigned char)213, (unsigned short)65005));
ASSERT_TRUE(IntEq((unsigned char)255, (unsigned short)255));
ASSERT_FALSE(IntNe((unsigned char)255, (unsigned short)255));
ASSERT_FALSE(IntLt((unsigned char)255, (unsigned short)255));
ASSERT_TRUE(IntLe((unsigned char)255, (unsigned short)255));
ASSERT_FALSE(IntGt((unsigned char)255, (unsigned short)255));
ASSERT_TRUE(IntGe((unsigned char)255, (unsigned short)255));
ASSERT_FALSE(IntEq((unsigned char)255, (unsigned short)99));
ASSERT_TRUE(IntNe((unsigned char)255, (unsigned short)99));
ASSERT_FALSE(IntLt((unsigned char)255, (unsigned short)99));
ASSERT_FALSE(IntLe((unsigned char)255, (unsigned short)99));
ASSERT_TRUE(IntGt((unsigned char)255, (unsigned short)99));
ASSERT_TRUE(IntGe((unsigned char)255, (unsigned short)99));
ASSERT_FALSE(IntEq((unsigned char)255, (unsigned short)52980));
ASSERT_TRUE(IntNe((unsigned char)255, (unsigned short)52980));
ASSERT_TRUE(IntLt((unsigned char)255, (unsigned short)52980));
ASSERT_TRUE(IntLe((unsigned char)255, (unsigned short)52980));
ASSERT_FALSE(IntGt((unsigned char)255, (unsigned short)52980));
ASSERT_FALSE(IntGe((unsigned char)255, (unsigned short)52980));
// short vs char
ASSERT_FALSE(IntEq((short)-32768, (char)-46));
ASSERT_TRUE(IntNe((short)-32768, (char)-46));
ASSERT_TRUE(IntLt((short)-32768, (char)-46));
ASSERT_TRUE(IntLe((short)-32768, (char)-46));
ASSERT_FALSE(IntGt((short)-32768, (char)-46));
ASSERT_FALSE(IntGe((short)-32768, (char)-46));
ASSERT_FALSE(IntEq((short)-14038, (char)-75));
ASSERT_TRUE(IntNe((short)-14038, (char)-75));
ASSERT_TRUE(IntLt((short)-14038, (char)-75));
ASSERT_TRUE(IntLe((short)-14038, (char)-75));
ASSERT_FALSE(IntGt((short)-14038, (char)-75));
ASSERT_FALSE(IntGe((short)-14038, (char)-75));
ASSERT_TRUE(IntEq((short)-128, (char)-128));
ASSERT_FALSE(IntNe((short)-128, (char)-128));
ASSERT_FALSE(IntLt((short)-128, (char)-128));
ASSERT_TRUE(IntLe((short)-128, (char)-128));
ASSERT_FALSE(IntGt((short)-128, (char)-128));
ASSERT_TRUE(IntGe((short)-128, (char)-128));
ASSERT_FALSE(IntEq((short)-128, (char)56));
ASSERT_TRUE(IntNe((short)-128, (char)56));
ASSERT_TRUE(IntLt((short)-128, (char)56));
ASSERT_TRUE(IntLe((short)-128, (char)56));
ASSERT_FALSE(IntGt((short)-128, (char)56));
ASSERT_FALSE(IntGe((short)-128, (char)56));
ASSERT_TRUE(IntEq((short)-21, (char)-21));
ASSERT_FALSE(IntNe((short)-21, (char)-21));
ASSERT_FALSE(IntLt((short)-21, (char)-21));
ASSERT_TRUE(IntLe((short)-21, (char)-21));
ASSERT_FALSE(IntGt((short)-21, (char)-21));
ASSERT_TRUE(IntGe((short)-21, (char)-21));
ASSERT_FALSE(IntEq((short)-21, (char)-127));
ASSERT_TRUE(IntNe((short)-21, (char)-127));
ASSERT_FALSE(IntLt((short)-21, (char)-127));
ASSERT_FALSE(IntLe((short)-21, (char)-127));
ASSERT_TRUE(IntGt((short)-21, (char)-127));
ASSERT_TRUE(IntGe((short)-21, (char)-127));
ASSERT_FALSE(IntEq((short)-21, (char)85));
ASSERT_TRUE(IntNe((short)-21, (char)85));
ASSERT_TRUE(IntLt((short)-21, (char)85));
ASSERT_TRUE(IntLe((short)-21, (char)85));
ASSERT_FALSE(IntGt((short)-21, (char)85));
ASSERT_FALSE(IntGe((short)-21, (char)85));
ASSERT_TRUE(IntEq((short)0, (char)0));
ASSERT_FALSE(IntNe((short)0, (char)0));
ASSERT_FALSE(IntLt((short)0, (char)0));
ASSERT_TRUE(IntLe((short)0, (char)0));
ASSERT_FALSE(IntGt((short)0, (char)0));
ASSERT_TRUE(IntGe((short)0, (char)0));
ASSERT_FALSE(IntEq((short)0, (char)-1));
ASSERT_TRUE(IntNe((short)0, (char)-1));
ASSERT_FALSE(IntLt((short)0, (char)-1));
ASSERT_FALSE(IntLe((short)0, (char)-1));
ASSERT_TRUE(IntGt((short)0, (char)-1));
ASSERT_TRUE(IntGe((short)0, (char)-1));
ASSERT_FALSE(IntEq((short)0, (char)51));
ASSERT_TRUE(IntNe((short)0, (char)51));
ASSERT_TRUE(IntLt((short)0, (char)51));
ASSERT_TRUE(IntLe((short)0, (char)51));
ASSERT_FALSE(IntGt((short)0, (char)51));
ASSERT_FALSE(IntGe((short)0, (char)51));
ASSERT_TRUE(IntEq((short)66, (char)66));
ASSERT_FALSE(IntNe((short)66, (char)66));
ASSERT_FALSE(IntLt((short)66, (char)66));
ASSERT_TRUE(IntLe((short)66, (char)66));
ASSERT_FALSE(IntGt((short)66, (char)66));
ASSERT_TRUE(IntGe((short)66, (char)66));
ASSERT_FALSE(IntEq((short)66, (char)-76));
ASSERT_TRUE(IntNe((short)66, (char)-76));
ASSERT_FALSE(IntLt((short)66, (char)-76));
ASSERT_FALSE(IntLe((short)66, (char)-76));
ASSERT_TRUE(IntGt((short)66, (char)-76));
ASSERT_TRUE(IntGe((short)66, (char)-76));
ASSERT_FALSE(IntEq((short)66, (char)75));
ASSERT_TRUE(IntNe((short)66, (char)75));
ASSERT_TRUE(IntLt((short)66, (char)75));
ASSERT_TRUE(IntLe((short)66, (char)75));
ASSERT_FALSE(IntGt((short)66, (char)75));
ASSERT_FALSE(IntGe((short)66, (char)75));
ASSERT_TRUE(IntEq((short)127, (char)127));
ASSERT_FALSE(IntNe((short)127, (char)127));
ASSERT_FALSE(IntLt((short)127, (char)127));
ASSERT_TRUE(IntLe((short)127, (char)127));
ASSERT_FALSE(IntGt((short)127, (char)127));
ASSERT_TRUE(IntGe((short)127, (char)127));
ASSERT_FALSE(IntEq((short)127, (char)-48));
ASSERT_TRUE(IntNe((short)127, (char)-48));
ASSERT_FALSE(IntLt((short)127, (char)-48));
ASSERT_FALSE(IntLe((short)127, (char)-48));
ASSERT_TRUE(IntGt((short)127, (char)-48));
ASSERT_TRUE(IntGe((short)127, (char)-48));
ASSERT_FALSE(IntEq((short)152, (char)95));
ASSERT_TRUE(IntNe((short)152, (char)95));
ASSERT_FALSE(IntLt((short)152, (char)95));
ASSERT_FALSE(IntLe((short)152, (char)95));
ASSERT_TRUE(IntGt((short)152, (char)95));
ASSERT_TRUE(IntGe((short)152, (char)95));
ASSERT_FALSE(IntEq((short)255, (char)18));
ASSERT_TRUE(IntNe((short)255, (char)18));
ASSERT_FALSE(IntLt((short)255, (char)18));
ASSERT_FALSE(IntLe((short)255, (char)18));
ASSERT_TRUE(IntGt((short)255, (char)18));
ASSERT_TRUE(IntGe((short)255, (char)18));
ASSERT_FALSE(IntEq((short)2520, (char)86));
ASSERT_TRUE(IntNe((short)2520, (char)86));
ASSERT_FALSE(IntLt((short)2520, (char)86));
ASSERT_FALSE(IntLe((short)2520, (char)86));
ASSERT_TRUE(IntGt((short)2520, (char)86));
ASSERT_TRUE(IntGe((short)2520, (char)86));
ASSERT_FALSE(IntEq((short)32767, (char)-63));
ASSERT_TRUE(IntNe((short)32767, (char)-63));
ASSERT_FALSE(IntLt((short)32767, (char)-63));
ASSERT_FALSE(IntLe((short)32767, (char)-63));
ASSERT_TRUE(IntGt((short)32767, (char)-63));
ASSERT_TRUE(IntGe((short)32767, (char)-63));
// short vs unsigned char
ASSERT_FALSE(IntEq((short)-32768, (unsigned char)88));
ASSERT_TRUE(IntNe((short)-32768, (unsigned char)88));
ASSERT_TRUE(IntLt((short)-32768, (unsigned char)88));
ASSERT_TRUE(IntLe((short)-32768, (unsigned char)88));
ASSERT_FALSE(IntGt((short)-32768, (unsigned char)88));
ASSERT_FALSE(IntGe((short)-32768, (unsigned char)88));
ASSERT_FALSE(IntEq((short)-24127, (unsigned char)81));
ASSERT_TRUE(IntNe((short)-24127, (unsigned char)81));
ASSERT_TRUE(IntLt((short)-24127, (unsigned char)81));
ASSERT_TRUE(IntLe((short)-24127, (unsigned char)81));
ASSERT_FALSE(IntGt((short)-24127, (unsigned char)81));
ASSERT_FALSE(IntGe((short)-24127, (unsigned char)81));
ASSERT_FALSE(IntEq((short)-128, (unsigned char)254));
ASSERT_TRUE(IntNe((short)-128, (unsigned char)254));
ASSERT_TRUE(IntLt((short)-128, (unsigned char)254));
ASSERT_TRUE(IntLe((short)-128, (unsigned char)254));
ASSERT_FALSE(IntGt((short)-128, (unsigned char)254));
ASSERT_FALSE(IntGe((short)-128, (unsigned char)254));
ASSERT_FALSE(IntEq((short)-104, (unsigned char)64));
ASSERT_TRUE(IntNe((short)-104, (unsigned char)64));
ASSERT_TRUE(IntLt((short)-104, (unsigned char)64));
ASSERT_TRUE(IntLe((short)-104, (unsigned char)64));
ASSERT_FALSE(IntGt((short)-104, (unsigned char)64));
ASSERT_FALSE(IntGe((short)-104, (unsigned char)64));
ASSERT_TRUE(IntEq((short)0, (unsigned char)0));
ASSERT_FALSE(IntNe((short)0, (unsigned char)0));
ASSERT_FALSE(IntLt((short)0, (unsigned char)0));
ASSERT_TRUE(IntLe((short)0, (unsigned char)0));
ASSERT_FALSE(IntGt((short)0, (unsigned char)0));
ASSERT_TRUE(IntGe((short)0, (unsigned char)0));
ASSERT_FALSE(IntEq((short)0, (unsigned char)194));
ASSERT_TRUE(IntNe((short)0, (unsigned char)194));
ASSERT_TRUE(IntLt((short)0, (unsigned char)194));
ASSERT_TRUE(IntLe((short)0, (unsigned char)194));
ASSERT_FALSE(IntGt((short)0, (unsigned char)194));
ASSERT_FALSE(IntGe((short)0, (unsigned char)194));
ASSERT_TRUE(IntEq((short)50, (unsigned char)50));
ASSERT_FALSE(IntNe((short)50, (unsigned char)50));
ASSERT_FALSE(IntLt((short)50, (unsigned char)50));
ASSERT_TRUE(IntLe((short)50, (unsigned char)50));
ASSERT_FALSE(IntGt((short)50, (unsigned char)50));
ASSERT_TRUE(IntGe((short)50, (unsigned char)50));
ASSERT_FALSE(IntEq((short)50, (unsigned char)37));
ASSERT_TRUE(IntNe((short)50, (unsigned char)37));
ASSERT_FALSE(IntLt((short)50, (unsigned char)37));
ASSERT_FALSE(IntLe((short)50, (unsigned char)37));
ASSERT_TRUE(IntGt((short)50, (unsigned char)37));
ASSERT_TRUE(IntGe((short)50, (unsigned char)37));
ASSERT_FALSE(IntEq((short)50, (unsigned char)195));
ASSERT_TRUE(IntNe((short)50, (unsigned char)195));
ASSERT_TRUE(IntLt((short)50, (unsigned char)195));
ASSERT_TRUE(IntLe((short)50, (unsigned char)195));
ASSERT_FALSE(IntGt((short)50, (unsigned char)195));
ASSERT_FALSE(IntGe((short)50, (unsigned char)195));
ASSERT_TRUE(IntEq((short)127, (unsigned char)127));
ASSERT_FALSE(IntNe((short)127, (unsigned char)127));
ASSERT_FALSE(IntLt((short)127, (unsigned char)127));
ASSERT_TRUE(IntLe((short)127, (unsigned char)127));
ASSERT_FALSE(IntGt((short)127, (unsigned char)127));
ASSERT_TRUE(IntGe((short)127, (unsigned char)127));
ASSERT_FALSE(IntEq((short)127, (unsigned char)126));
ASSERT_TRUE(IntNe((short)127, (unsigned char)126));
ASSERT_FALSE(IntLt((short)127, (unsigned char)126));
ASSERT_FALSE(IntLe((short)127, (unsigned char)126));
ASSERT_TRUE(IntGt((short)127, (unsigned char)126));
ASSERT_TRUE(IntGe((short)127, (unsigned char)126));
ASSERT_FALSE(IntEq((short)127, (unsigned char)196));
ASSERT_TRUE(IntNe((short)127, (unsigned char)196));
ASSERT_TRUE(IntLt((short)127, (unsigned char)196));
ASSERT_TRUE(IntLe((short)127, (unsigned char)196));
ASSERT_FALSE(IntGt((short)127, (unsigned char)196));
ASSERT_FALSE(IntGe((short)127, (unsigned char)196));
ASSERT_TRUE(IntEq((short)185, (unsigned char)185));
ASSERT_FALSE(IntNe((short)185, (unsigned char)185));
ASSERT_FALSE(IntLt((short)185, (unsigned char)185));
ASSERT_TRUE(IntLe((short)185, (unsigned char)185));
ASSERT_FALSE(IntGt((short)185, (unsigned char)185));
ASSERT_TRUE(IntGe((short)185, (unsigned char)185));
ASSERT_FALSE(IntEq((short)185, (unsigned char)143));
ASSERT_TRUE(IntNe((short)185, (unsigned char)143));
ASSERT_FALSE(IntLt((short)185, (unsigned char)143));
ASSERT_FALSE(IntLe((short)185, (unsigned char)143));
ASSERT_TRUE(IntGt((short)185, (unsigned char)143));
ASSERT_TRUE(IntGe((short)185, (unsigned char)143));
ASSERT_FALSE(IntEq((short)185, (unsigned char)242));
ASSERT_TRUE(IntNe((short)185, (unsigned char)242));
ASSERT_TRUE(IntLt((short)185, (unsigned char)242));
ASSERT_TRUE(IntLe((short)185, (unsigned char)242));
ASSERT_FALSE(IntGt((short)185, (unsigned char)242));
ASSERT_FALSE(IntGe((short)185, (unsigned char)242));
ASSERT_TRUE(IntEq((short)255, (unsigned char)255));
ASSERT_FALSE(IntNe((short)255, (unsigned char)255));
ASSERT_FALSE(IntLt((short)255, (unsigned char)255));
ASSERT_TRUE(IntLe((short)255, (unsigned char)255));
ASSERT_FALSE(IntGt((short)255, (unsigned char)255));
ASSERT_TRUE(IntGe((short)255, (unsigned char)255));
ASSERT_FALSE(IntEq((short)255, (unsigned char)12));
ASSERT_TRUE(IntNe((short)255, (unsigned char)12));
ASSERT_FALSE(IntLt((short)255, (unsigned char)12));
ASSERT_FALSE(IntLe((short)255, (unsigned char)12));
ASSERT_TRUE(IntGt((short)255, (unsigned char)12));
ASSERT_TRUE(IntGe((short)255, (unsigned char)12));
ASSERT_FALSE(IntEq((short)4129, (unsigned char)122));
ASSERT_TRUE(IntNe((short)4129, (unsigned char)122));
ASSERT_FALSE(IntLt((short)4129, (unsigned char)122));
ASSERT_FALSE(IntLe((short)4129, (unsigned char)122));
ASSERT_TRUE(IntGt((short)4129, (unsigned char)122));
ASSERT_TRUE(IntGe((short)4129, (unsigned char)122));
ASSERT_FALSE(IntEq((short)32767, (unsigned char)84));
ASSERT_TRUE(IntNe((short)32767, (unsigned char)84));
ASSERT_FALSE(IntLt((short)32767, (unsigned char)84));
ASSERT_FALSE(IntLe((short)32767, (unsigned char)84));
ASSERT_TRUE(IntGt((short)32767, (unsigned char)84));
ASSERT_TRUE(IntGe((short)32767, (unsigned char)84));
// short vs unsigned short
ASSERT_FALSE(IntEq((short)-32768, (unsigned short)44194));
ASSERT_TRUE(IntNe((short)-32768, (unsigned short)44194));
ASSERT_TRUE(IntLt((short)-32768, (unsigned short)44194));
ASSERT_TRUE(IntLe((short)-32768, (unsigned short)44194));
ASSERT_FALSE(IntGt((short)-32768, (unsigned short)44194));
ASSERT_FALSE(IntGe((short)-32768, (unsigned short)44194));
ASSERT_FALSE(IntEq((short)-23405, (unsigned short)63393));
ASSERT_TRUE(IntNe((short)-23405, (unsigned short)63393));
ASSERT_TRUE(IntLt((short)-23405, (unsigned short)63393));
ASSERT_TRUE(IntLe((short)-23405, (unsigned short)63393));
ASSERT_FALSE(IntGt((short)-23405, (unsigned short)63393));
ASSERT_FALSE(IntGe((short)-23405, (unsigned short)63393));
ASSERT_FALSE(IntEq((short)-128, (unsigned short)85));
ASSERT_TRUE(IntNe((short)-128, (unsigned short)85));
ASSERT_TRUE(IntLt((short)-128, (unsigned short)85));
ASSERT_TRUE(IntLe((short)-128, (unsigned short)85));
ASSERT_FALSE(IntGt((short)-128, (unsigned short)85));
ASSERT_FALSE(IntGe((short)-128, (unsigned short)85));
ASSERT_FALSE(IntEq((short)-60, (unsigned short)55552));
ASSERT_TRUE(IntNe((short)-60, (unsigned short)55552));
ASSERT_TRUE(IntLt((short)-60, (unsigned short)55552));
ASSERT_TRUE(IntLe((short)-60, (unsigned short)55552));
ASSERT_FALSE(IntGt((short)-60, (unsigned short)55552));
ASSERT_FALSE(IntGe((short)-60, (unsigned short)55552));
ASSERT_TRUE(IntEq((short)0, (unsigned short)0));
ASSERT_FALSE(IntNe((short)0, (unsigned short)0));
ASSERT_FALSE(IntLt((short)0, (unsigned short)0));
ASSERT_TRUE(IntLe((short)0, (unsigned short)0));
ASSERT_FALSE(IntGt((short)0, (unsigned short)0));
ASSERT_TRUE(IntGe((short)0, (unsigned short)0));
ASSERT_FALSE(IntEq((short)0, (unsigned short)4622));
ASSERT_TRUE(IntNe((short)0, (unsigned short)4622));
ASSERT_TRUE(IntLt((short)0, (unsigned short)4622));
ASSERT_TRUE(IntLe((short)0, (unsigned short)4622));
ASSERT_FALSE(IntGt((short)0, (unsigned short)4622));
ASSERT_FALSE(IntGe((short)0, (unsigned short)4622));
ASSERT_TRUE(IntEq((short)74, (unsigned short)74));
ASSERT_FALSE(IntNe((short)74, (unsigned short)74));
ASSERT_FALSE(IntLt((short)74, (unsigned short)74));
ASSERT_TRUE(IntLe((short)74, (unsigned short)74));
ASSERT_FALSE(IntGt((short)74, (unsigned short)74));
ASSERT_TRUE(IntGe((short)74, (unsigned short)74));
ASSERT_FALSE(IntEq((short)74, (unsigned short)29));
ASSERT_TRUE(IntNe((short)74, (unsigned short)29));
ASSERT_FALSE(IntLt((short)74, (unsigned short)29));
ASSERT_FALSE(IntLe((short)74, (unsigned short)29));
ASSERT_TRUE(IntGt((short)74, (unsigned short)29));
ASSERT_TRUE(IntGe((short)74, (unsigned short)29));
ASSERT_FALSE(IntEq((short)74, (unsigned short)45324));
ASSERT_TRUE(IntNe((short)74, (unsigned short)45324));
ASSERT_TRUE(IntLt((short)74, (unsigned short)45324));
ASSERT_TRUE(IntLe((short)74, (unsigned short)45324));
ASSERT_FALSE(IntGt((short)74, (unsigned short)45324));
ASSERT_FALSE(IntGe((short)74, (unsigned short)45324));
ASSERT_TRUE(IntEq((short)127, (unsigned short)127));
ASSERT_FALSE(IntNe((short)127, (unsigned short)127));
ASSERT_FALSE(IntLt((short)127, (unsigned short)127));
ASSERT_TRUE(IntLe((short)127, (unsigned short)127));
ASSERT_FALSE(IntGt((short)127, (unsigned short)127));
ASSERT_TRUE(IntGe((short)127, (unsigned short)127));
ASSERT_FALSE(IntEq((short)127, (unsigned short)53));
ASSERT_TRUE(IntNe((short)127, (unsigned short)53));
ASSERT_FALSE(IntLt((short)127, (unsigned short)53));
ASSERT_FALSE(IntLe((short)127, (unsigned short)53));
ASSERT_TRUE(IntGt((short)127, (unsigned short)53));
ASSERT_TRUE(IntGe((short)127, (unsigned short)53));
ASSERT_FALSE(IntEq((short)127, (unsigned short)32824));
ASSERT_TRUE(IntNe((short)127, (unsigned short)32824));
ASSERT_TRUE(IntLt((short)127, (unsigned short)32824));
ASSERT_TRUE(IntLe((short)127, (unsigned short)32824));
ASSERT_FALSE(IntGt((short)127, (unsigned short)32824));
ASSERT_FALSE(IntGe((short)127, (unsigned short)32824));
ASSERT_TRUE(IntEq((short)174, (unsigned short)174));
ASSERT_FALSE(IntNe((short)174, (unsigned short)174));
ASSERT_FALSE(IntLt((short)174, (unsigned short)174));
ASSERT_TRUE(IntLe((short)174, (unsigned short)174));
ASSERT_FALSE(IntGt((short)174, (unsigned short)174));
ASSERT_TRUE(IntGe((short)174, (unsigned short)174));
ASSERT_FALSE(IntEq((short)174, (unsigned short)49));
ASSERT_TRUE(IntNe((short)174, (unsigned short)49));
ASSERT_FALSE(IntLt((short)174, (unsigned short)49));
ASSERT_FALSE(IntLe((short)174, (unsigned short)49));
ASSERT_TRUE(IntGt((short)174, (unsigned short)49));
ASSERT_TRUE(IntGe((short)174, (unsigned short)49));
ASSERT_FALSE(IntEq((short)174, (unsigned short)52434));
ASSERT_TRUE(IntNe((short)174, (unsigned short)52434));
ASSERT_TRUE(IntLt((short)174, (unsigned short)52434));
ASSERT_TRUE(IntLe((short)174, (unsigned short)52434));
ASSERT_FALSE(IntGt((short)174, (unsigned short)52434));
ASSERT_FALSE(IntGe((short)174, (unsigned short)52434));
ASSERT_TRUE(IntEq((short)255, (unsigned short)255));
ASSERT_FALSE(IntNe((short)255, (unsigned short)255));
ASSERT_FALSE(IntLt((short)255, (unsigned short)255));
ASSERT_TRUE(IntLe((short)255, (unsigned short)255));
ASSERT_FALSE(IntGt((short)255, (unsigned short)255));
ASSERT_TRUE(IntGe((short)255, (unsigned short)255));
ASSERT_FALSE(IntEq((short)255, (unsigned short)78));
ASSERT_TRUE(IntNe((short)255, (unsigned short)78));
ASSERT_FALSE(IntLt((short)255, (unsigned short)78));
ASSERT_FALSE(IntLe((short)255, (unsigned short)78));
ASSERT_TRUE(IntGt((short)255, (unsigned short)78));
ASSERT_TRUE(IntGe((short)255, (unsigned short)78));
ASSERT_FALSE(IntEq((short)255, (unsigned short)41117));
ASSERT_TRUE(IntNe((short)255, (unsigned short)41117));
ASSERT_TRUE(IntLt((short)255, (unsigned short)41117));
ASSERT_TRUE(IntLe((short)255, (unsigned short)41117));
ASSERT_FALSE(IntGt((short)255, (unsigned short)41117));
ASSERT_FALSE(IntGe((short)255, (unsigned short)41117));
ASSERT_TRUE(IntEq((short)4317, (unsigned short)4317));
ASSERT_FALSE(IntNe((short)4317, (unsigned short)4317));
ASSERT_FALSE(IntLt((short)4317, (unsigned short)4317));
ASSERT_TRUE(IntLe((short)4317, (unsigned short)4317));
ASSERT_FALSE(IntGt((short)4317, (unsigned short)4317));
ASSERT_TRUE(IntGe((short)4317, (unsigned short)4317));
ASSERT_FALSE(IntEq((short)4317, (unsigned short)2790));
ASSERT_TRUE(IntNe((short)4317, (unsigned short)2790));
ASSERT_FALSE(IntLt((short)4317, (unsigned short)2790));
ASSERT_FALSE(IntLe((short)4317, (unsigned short)2790));
ASSERT_TRUE(IntGt((short)4317, (unsigned short)2790));
ASSERT_TRUE(IntGe((short)4317, (unsigned short)2790));
ASSERT_FALSE(IntEq((short)4317, (unsigned short)49074));
ASSERT_TRUE(IntNe((short)4317, (unsigned short)49074));
ASSERT_TRUE(IntLt((short)4317, (unsigned short)49074));
ASSERT_TRUE(IntLe((short)4317, (unsigned short)49074));
ASSERT_FALSE(IntGt((short)4317, (unsigned short)49074));
ASSERT_FALSE(IntGe((short)4317, (unsigned short)49074));
ASSERT_TRUE(IntEq((short)32767, (unsigned short)32767));
ASSERT_FALSE(IntNe((short)32767, (unsigned short)32767));
ASSERT_FALSE(IntLt((short)32767, (unsigned short)32767));
ASSERT_TRUE(IntLe((short)32767, (unsigned short)32767));
ASSERT_FALSE(IntGt((short)32767, (unsigned short)32767));
ASSERT_TRUE(IntGe((short)32767, (unsigned short)32767));
ASSERT_FALSE(IntEq((short)32767, (unsigned short)1514));
ASSERT_TRUE(IntNe((short)32767, (unsigned short)1514));
ASSERT_FALSE(IntLt((short)32767, (unsigned short)1514));
ASSERT_FALSE(IntLe((short)32767, (unsigned short)1514));
ASSERT_TRUE(IntGt((short)32767, (unsigned short)1514));
ASSERT_TRUE(IntGe((short)32767, (unsigned short)1514));
ASSERT_FALSE(IntEq((short)32767, (unsigned short)47825));
ASSERT_TRUE(IntNe((short)32767, (unsigned short)47825));
ASSERT_TRUE(IntLt((short)32767, (unsigned short)47825));
ASSERT_TRUE(IntLe((short)32767, (unsigned short)47825));
ASSERT_FALSE(IntGt((short)32767, (unsigned short)47825));
ASSERT_FALSE(IntGe((short)32767, (unsigned short)47825));
// unsigned short vs char
ASSERT_TRUE(IntEq((unsigned short)0, (char)0));
ASSERT_FALSE(IntNe((unsigned short)0, (char)0));
ASSERT_FALSE(IntLt((unsigned short)0, (char)0));
ASSERT_TRUE(IntLe((unsigned short)0, (char)0));
ASSERT_FALSE(IntGt((unsigned short)0, (char)0));
ASSERT_TRUE(IntGe((unsigned short)0, (char)0));
ASSERT_FALSE(IntEq((unsigned short)0, (char)-10));
ASSERT_TRUE(IntNe((unsigned short)0, (char)-10));
ASSERT_FALSE(IntLt((unsigned short)0, (char)-10));
ASSERT_FALSE(IntLe((unsigned short)0, (char)-10));
ASSERT_TRUE(IntGt((unsigned short)0, (char)-10));
ASSERT_TRUE(IntGe((unsigned short)0, (char)-10));
ASSERT_FALSE(IntEq((unsigned short)0, (char)116));
ASSERT_TRUE(IntNe((unsigned short)0, (char)116));
ASSERT_TRUE(IntLt((unsigned short)0, (char)116));
ASSERT_TRUE(IntLe((unsigned short)0, (char)116));
ASSERT_FALSE(IntGt((unsigned short)0, (char)116));
ASSERT_FALSE(IntGe((unsigned short)0, (char)116));
ASSERT_TRUE(IntEq((unsigned short)52, (char)52));
ASSERT_FALSE(IntNe((unsigned short)52, (char)52));
ASSERT_FALSE(IntLt((unsigned short)52, (char)52));
ASSERT_TRUE(IntLe((unsigned short)52, (char)52));
ASSERT_FALSE(IntGt((unsigned short)52, (char)52));
ASSERT_TRUE(IntGe((unsigned short)52, (char)52));
ASSERT_FALSE(IntEq((unsigned short)52, (char)18));
ASSERT_TRUE(IntNe((unsigned short)52, (char)18));
ASSERT_FALSE(IntLt((unsigned short)52, (char)18));
ASSERT_FALSE(IntLe((unsigned short)52, (char)18));
ASSERT_TRUE(IntGt((unsigned short)52, (char)18));
ASSERT_TRUE(IntGe((unsigned short)52, (char)18));
ASSERT_FALSE(IntEq((unsigned short)52, (char)57));
ASSERT_TRUE(IntNe((unsigned short)52, (char)57));
ASSERT_TRUE(IntLt((unsigned short)52, (char)57));
ASSERT_TRUE(IntLe((unsigned short)52, (char)57));
ASSERT_FALSE(IntGt((unsigned short)52, (char)57));
ASSERT_FALSE(IntGe((unsigned short)52, (char)57));
ASSERT_TRUE(IntEq((unsigned short)127, (char)127));
ASSERT_FALSE(IntNe((unsigned short)127, (char)127));
ASSERT_FALSE(IntLt((unsigned short)127, (char)127));
ASSERT_TRUE(IntLe((unsigned short)127, (char)127));
ASSERT_FALSE(IntGt((unsigned short)127, (char)127));
ASSERT_TRUE(IntGe((unsigned short)127, (char)127));
ASSERT_FALSE(IntEq((unsigned short)127, (char)78));
ASSERT_TRUE(IntNe((unsigned short)127, (char)78));
ASSERT_FALSE(IntLt((unsigned short)127, (char)78));
ASSERT_FALSE(IntLe((unsigned short)127, (char)78));
ASSERT_TRUE(IntGt((unsigned short)127, (char)78));
ASSERT_TRUE(IntGe((unsigned short)127, (char)78));
ASSERT_FALSE(IntEq((unsigned short)189, (char)19));
ASSERT_TRUE(IntNe((unsigned short)189, (char)19));
ASSERT_FALSE(IntLt((unsigned short)189, (char)19));
ASSERT_FALSE(IntLe((unsigned short)189, (char)19));
ASSERT_TRUE(IntGt((unsigned short)189, (char)19));
ASSERT_TRUE(IntGe((unsigned short)189, (char)19));
ASSERT_FALSE(IntEq((unsigned short)255, (char)-74));
ASSERT_TRUE(IntNe((unsigned short)255, (char)-74));
ASSERT_FALSE(IntLt((unsigned short)255, (char)-74));
ASSERT_FALSE(IntLe((unsigned short)255, (char)-74));
ASSERT_TRUE(IntGt((unsigned short)255, (char)-74));
ASSERT_TRUE(IntGe((unsigned short)255, (char)-74));
ASSERT_FALSE(IntEq((unsigned short)411, (char)-83));
ASSERT_TRUE(IntNe((unsigned short)411, (char)-83));
ASSERT_FALSE(IntLt((unsigned short)411, (char)-83));
ASSERT_FALSE(IntLe((unsigned short)411, (char)-83));
ASSERT_TRUE(IntGt((unsigned short)411, (char)-83));
ASSERT_TRUE(IntGe((unsigned short)411, (char)-83));
ASSERT_FALSE(IntEq((unsigned short)65535, (char)91));
ASSERT_TRUE(IntNe((unsigned short)65535, (char)91));
ASSERT_FALSE(IntLt((unsigned short)65535, (char)91));
ASSERT_FALSE(IntLe((unsigned short)65535, (char)91));
ASSERT_TRUE(IntGt((unsigned short)65535, (char)91));
ASSERT_TRUE(IntGe((unsigned short)65535, (char)91));
// unsigned short vs unsigned char
ASSERT_TRUE(IntEq((unsigned short)0, (unsigned char)0));
ASSERT_FALSE(IntNe((unsigned short)0, (unsigned char)0));
ASSERT_FALSE(IntLt((unsigned short)0, (unsigned char)0));
ASSERT_TRUE(IntLe((unsigned short)0, (unsigned char)0));
ASSERT_FALSE(IntGt((unsigned short)0, (unsigned char)0));
ASSERT_TRUE(IntGe((unsigned short)0, (unsigned char)0));
ASSERT_FALSE(IntEq((unsigned short)0, (unsigned char)38));
ASSERT_TRUE(IntNe((unsigned short)0, (unsigned char)38));
ASSERT_TRUE(IntLt((unsigned short)0, (unsigned char)38));
ASSERT_TRUE(IntLe((unsigned short)0, (unsigned char)38));
ASSERT_FALSE(IntGt((unsigned short)0, (unsigned char)38));
ASSERT_FALSE(IntGe((unsigned short)0, (unsigned char)38));
ASSERT_TRUE(IntEq((unsigned short)41, (unsigned char)41));
ASSERT_FALSE(IntNe((unsigned short)41, (unsigned char)41));
ASSERT_FALSE(IntLt((unsigned short)41, (unsigned char)41));
ASSERT_TRUE(IntLe((unsigned short)41, (unsigned char)41));
ASSERT_FALSE(IntGt((unsigned short)41, (unsigned char)41));
ASSERT_TRUE(IntGe((unsigned short)41, (unsigned char)41));
ASSERT_FALSE(IntEq((unsigned short)41, (unsigned char)32));
ASSERT_TRUE(IntNe((unsigned short)41, (unsigned char)32));
ASSERT_FALSE(IntLt((unsigned short)41, (unsigned char)32));
ASSERT_FALSE(IntLe((unsigned short)41, (unsigned char)32));
ASSERT_TRUE(IntGt((unsigned short)41, (unsigned char)32));
ASSERT_TRUE(IntGe((unsigned short)41, (unsigned char)32));
ASSERT_FALSE(IntEq((unsigned short)41, (unsigned char)117));
ASSERT_TRUE(IntNe((unsigned short)41, (unsigned char)117));
ASSERT_TRUE(IntLt((unsigned short)41, (unsigned char)117));
ASSERT_TRUE(IntLe((unsigned short)41, (unsigned char)117));
ASSERT_FALSE(IntGt((unsigned short)41, (unsigned char)117));
ASSERT_FALSE(IntGe((unsigned short)41, (unsigned char)117));
ASSERT_TRUE(IntEq((unsigned short)127, (unsigned char)127));
ASSERT_FALSE(IntNe((unsigned short)127, (unsigned char)127));
ASSERT_FALSE(IntLt((unsigned short)127, (unsigned char)127));
ASSERT_TRUE(IntLe((unsigned short)127, (unsigned char)127));
ASSERT_FALSE(IntGt((unsigned short)127, (unsigned char)127));
ASSERT_TRUE(IntGe((unsigned short)127, (unsigned char)127));
ASSERT_FALSE(IntEq((unsigned short)127, (unsigned char)39));
ASSERT_TRUE(IntNe((unsigned short)127, (unsigned char)39));
ASSERT_FALSE(IntLt((unsigned short)127, (unsigned char)39));
ASSERT_FALSE(IntLe((unsigned short)127, (unsigned char)39));
ASSERT_TRUE(IntGt((unsigned short)127, (unsigned char)39));
ASSERT_TRUE(IntGe((unsigned short)127, (unsigned char)39));
ASSERT_FALSE(IntEq((unsigned short)127, (unsigned char)237));
ASSERT_TRUE(IntNe((unsigned short)127, (unsigned char)237));
ASSERT_TRUE(IntLt((unsigned short)127, (unsigned char)237));
ASSERT_TRUE(IntLe((unsigned short)127, (unsigned char)237));
ASSERT_FALSE(IntGt((unsigned short)127, (unsigned char)237));
ASSERT_FALSE(IntGe((unsigned short)127, (unsigned char)237));
ASSERT_TRUE(IntEq((unsigned short)170, (unsigned char)170));
ASSERT_FALSE(IntNe((unsigned short)170, (unsigned char)170));
ASSERT_FALSE(IntLt((unsigned short)170, (unsigned char)170));
ASSERT_TRUE(IntLe((unsigned short)170, (unsigned char)170));
ASSERT_FALSE(IntGt((unsigned short)170, (unsigned char)170));
ASSERT_TRUE(IntGe((unsigned short)170, (unsigned char)170));
ASSERT_FALSE(IntEq((unsigned short)170, (unsigned char)26));
ASSERT_TRUE(IntNe((unsigned short)170, (unsigned char)26));
ASSERT_FALSE(IntLt((unsigned short)170, (unsigned char)26));
ASSERT_FALSE(IntLe((unsigned short)170, (unsigned char)26));
ASSERT_TRUE(IntGt((unsigned short)170, (unsigned char)26));
ASSERT_TRUE(IntGe((unsigned short)170, (unsigned char)26));
ASSERT_FALSE(IntEq((unsigned short)170, (unsigned char)239));
ASSERT_TRUE(IntNe((unsigned short)170, (unsigned char)239));
ASSERT_TRUE(IntLt((unsigned short)170, (unsigned char)239));
ASSERT_TRUE(IntLe((unsigned short)170, (unsigned char)239));
ASSERT_FALSE(IntGt((unsigned short)170, (unsigned char)239));
ASSERT_FALSE(IntGe((unsigned short)170, (unsigned char)239));
ASSERT_TRUE(IntEq((unsigned short)255, (unsigned char)255));
ASSERT_FALSE(IntNe((unsigned short)255, (unsigned char)255));
ASSERT_FALSE(IntLt((unsigned short)255, (unsigned char)255));
ASSERT_TRUE(IntLe((unsigned short)255, (unsigned char)255));
ASSERT_FALSE(IntGt((unsigned short)255, (unsigned char)255));
ASSERT_TRUE(IntGe((unsigned short)255, (unsigned char)255));
ASSERT_FALSE(IntEq((unsigned short)255, (unsigned char)143));
ASSERT_TRUE(IntNe((unsigned short)255, (unsigned char)143));
ASSERT_FALSE(IntLt((unsigned short)255, (unsigned char)143));
ASSERT_FALSE(IntLe((unsigned short)255, (unsigned char)143));
ASSERT_TRUE(IntGt((unsigned short)255, (unsigned char)143));
ASSERT_TRUE(IntGe((unsigned short)255, (unsigned char)143));
ASSERT_FALSE(IntEq((unsigned short)58674, (unsigned char)66));
ASSERT_TRUE(IntNe((unsigned short)58674, (unsigned char)66));
ASSERT_FALSE(IntLt((unsigned short)58674, (unsigned char)66));
ASSERT_FALSE(IntLe((unsigned short)58674, (unsigned char)66));
ASSERT_TRUE(IntGt((unsigned short)58674, (unsigned char)66));
ASSERT_TRUE(IntGe((unsigned short)58674, (unsigned char)66));
ASSERT_FALSE(IntEq((unsigned short)65535, (unsigned char)220));
ASSERT_TRUE(IntNe((unsigned short)65535, (unsigned char)220));
ASSERT_FALSE(IntLt((unsigned short)65535, (unsigned char)220));
ASSERT_FALSE(IntLe((unsigned short)65535, (unsigned char)220));
ASSERT_TRUE(IntGt((unsigned short)65535, (unsigned char)220));
ASSERT_TRUE(IntGe((unsigned short)65535, (unsigned char)220));
// unsigned short vs short
ASSERT_TRUE(IntEq((unsigned short)0, (short)0));
ASSERT_FALSE(IntNe((unsigned short)0, (short)0));
ASSERT_FALSE(IntLt((unsigned short)0, (short)0));
ASSERT_TRUE(IntLe((unsigned short)0, (short)0));
ASSERT_FALSE(IntGt((unsigned short)0, (short)0));
ASSERT_TRUE(IntGe((unsigned short)0, (short)0));
ASSERT_FALSE(IntEq((unsigned short)0, (short)-25403));
ASSERT_TRUE(IntNe((unsigned short)0, (short)-25403));
ASSERT_FALSE(IntLt((unsigned short)0, (short)-25403));
ASSERT_FALSE(IntLe((unsigned short)0, (short)-25403));
ASSERT_TRUE(IntGt((unsigned short)0, (short)-25403));
ASSERT_TRUE(IntGe((unsigned short)0, (short)-25403));
ASSERT_FALSE(IntEq((unsigned short)0, (short)31078));
ASSERT_TRUE(IntNe((unsigned short)0, (short)31078));
ASSERT_TRUE(IntLt((unsigned short)0, (short)31078));
ASSERT_TRUE(IntLe((unsigned short)0, (short)31078));
ASSERT_FALSE(IntGt((unsigned short)0, (short)31078));
ASSERT_FALSE(IntGe((unsigned short)0, (short)31078));
ASSERT_TRUE(IntEq((unsigned short)27, (short)27));
ASSERT_FALSE(IntNe((unsigned short)27, (short)27));
ASSERT_FALSE(IntLt((unsigned short)27, (short)27));
ASSERT_TRUE(IntLe((unsigned short)27, (short)27));
ASSERT_FALSE(IntGt((unsigned short)27, (short)27));
ASSERT_TRUE(IntGe((unsigned short)27, (short)27));
ASSERT_FALSE(IntEq((unsigned short)27, (short)-20268));
ASSERT_TRUE(IntNe((unsigned short)27, (short)-20268));
ASSERT_FALSE(IntLt((unsigned short)27, (short)-20268));
ASSERT_FALSE(IntLe((unsigned short)27, (short)-20268));
ASSERT_TRUE(IntGt((unsigned short)27, (short)-20268));
ASSERT_TRUE(IntGe((unsigned short)27, (short)-20268));
ASSERT_FALSE(IntEq((unsigned short)27, (short)32731));
ASSERT_TRUE(IntNe((unsigned short)27, (short)32731));
ASSERT_TRUE(IntLt((unsigned short)27, (short)32731));
ASSERT_TRUE(IntLe((unsigned short)27, (short)32731));
ASSERT_FALSE(IntGt((unsigned short)27, (short)32731));
ASSERT_FALSE(IntGe((unsigned short)27, (short)32731));
ASSERT_TRUE(IntEq((unsigned short)127, (short)127));
ASSERT_FALSE(IntNe((unsigned short)127, (short)127));
ASSERT_FALSE(IntLt((unsigned short)127, (short)127));
ASSERT_TRUE(IntLe((unsigned short)127, (short)127));
ASSERT_FALSE(IntGt((unsigned short)127, (short)127));
ASSERT_TRUE(IntGe((unsigned short)127, (short)127));
ASSERT_FALSE(IntEq((unsigned short)127, (short)-26022));
ASSERT_TRUE(IntNe((unsigned short)127, (short)-26022));
ASSERT_FALSE(IntLt((unsigned short)127, (short)-26022));
ASSERT_FALSE(IntLe((unsigned short)127, (short)-26022));
ASSERT_TRUE(IntGt((unsigned short)127, (short)-26022));
ASSERT_TRUE(IntGe((unsigned short)127, (short)-26022));
ASSERT_FALSE(IntEq((unsigned short)127, (short)32202));
ASSERT_TRUE(IntNe((unsigned short)127, (short)32202));
ASSERT_TRUE(IntLt((unsigned short)127, (short)32202));
ASSERT_TRUE(IntLe((unsigned short)127, (short)32202));
ASSERT_FALSE(IntGt((unsigned short)127, (short)32202));
ASSERT_FALSE(IntGe((unsigned short)127, (short)32202));
ASSERT_TRUE(IntEq((unsigned short)163, (short)163));
ASSERT_FALSE(IntNe((unsigned short)163, (short)163));
ASSERT_FALSE(IntLt((unsigned short)163, (short)163));
ASSERT_TRUE(IntLe((unsigned short)163, (short)163));
ASSERT_FALSE(IntGt((unsigned short)163, (short)163));
ASSERT_TRUE(IntGe((unsigned short)163, (short)163));
ASSERT_FALSE(IntEq((unsigned short)163, (short)-12717));
ASSERT_TRUE(IntNe((unsigned short)163, (short)-12717));
ASSERT_FALSE(IntLt((unsigned short)163, (short)-12717));
ASSERT_FALSE(IntLe((unsigned short)163, (short)-12717));
ASSERT_TRUE(IntGt((unsigned short)163, (short)-12717));
ASSERT_TRUE(IntGe((unsigned short)163, (short)-12717));
ASSERT_FALSE(IntEq((unsigned short)163, (short)8086));
ASSERT_TRUE(IntNe((unsigned short)163, (short)8086));
ASSERT_TRUE(IntLt((unsigned short)163, (short)8086));
ASSERT_TRUE(IntLe((unsigned short)163, (short)8086));
ASSERT_FALSE(IntGt((unsigned short)163, (short)8086));
ASSERT_FALSE(IntGe((unsigned short)163, (short)8086));
ASSERT_TRUE(IntEq((unsigned short)255, (short)255));
ASSERT_FALSE(IntNe((unsigned short)255, (short)255));
ASSERT_FALSE(IntLt((unsigned short)255, (short)255));
ASSERT_TRUE(IntLe((unsigned short)255, (short)255));
ASSERT_FALSE(IntGt((unsigned short)255, (short)255));
ASSERT_TRUE(IntGe((unsigned short)255, (short)255));
ASSERT_FALSE(IntEq((unsigned short)255, (short)-16465));
ASSERT_TRUE(IntNe((unsigned short)255, (short)-16465));
ASSERT_FALSE(IntLt((unsigned short)255, (short)-16465));
ASSERT_FALSE(IntLe((unsigned short)255, (short)-16465));
ASSERT_TRUE(IntGt((unsigned short)255, (short)-16465));
ASSERT_TRUE(IntGe((unsigned short)255, (short)-16465));
ASSERT_FALSE(IntEq((unsigned short)255, (short)10017));
ASSERT_TRUE(IntNe((unsigned short)255, (short)10017));
ASSERT_TRUE(IntLt((unsigned short)255, (short)10017));
ASSERT_TRUE(IntLe((unsigned short)255, (short)10017));
ASSERT_FALSE(IntGt((unsigned short)255, (short)10017));
ASSERT_FALSE(IntGe((unsigned short)255, (short)10017));
ASSERT_FALSE(IntEq((unsigned short)44675, (short)31959));
ASSERT_TRUE(IntNe((unsigned short)44675, (short)31959));
ASSERT_FALSE(IntLt((unsigned short)44675, (short)31959));
ASSERT_FALSE(IntLe((unsigned short)44675, (short)31959));
ASSERT_TRUE(IntGt((unsigned short)44675, (short)31959));
ASSERT_TRUE(IntGe((unsigned short)44675, (short)31959));
ASSERT_FALSE(IntEq((unsigned short)65535, (short)4016));
ASSERT_TRUE(IntNe((unsigned short)65535, (short)4016));
ASSERT_FALSE(IntLt((unsigned short)65535, (short)4016));
ASSERT_FALSE(IntLe((unsigned short)65535, (short)4016));
ASSERT_TRUE(IntGt((unsigned short)65535, (short)4016));
ASSERT_TRUE(IntGe((unsigned short)65535, (short)4016));}
